datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  email             String     @unique
  firstName         String?
  lastName          String?
  image             String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  addressLine1      String?
  addressLine2      String?
  addressCity       String?
  addressState      String?
  addressPostalCode String?
  addressCountry    String?
  purchases         Purchase[]
}

model Artworks {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  category     String
  title        String
  serie        String
  text         String?
  dimension    String
  date         String
  format       String
  materials    String?
  paper        String?
  thumbnailUrl String
  imageUrls    String[] @map("imageUrls")
  videoUrl     String?  @map("videoUrl")
}

model Originals {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  category  String
  title     String
  serie     String?
  piece     String?
  dimension String
  date      String
  format    String
  price     Int
  paper     String?
  imageUrls String[] @map("imageUrls")
  stock     Int
}

model Prints {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  category  String
  title     String
  serie     String?
  piece     String?
  dimension String
  date      String
  format    String
  price     Int
  paper     String?
  imageUrls String[] @map("imageUrls")
  stock     Int
}

model Purchase {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName         String?
  lastName          String?
  printsId          String   @db.ObjectId
  quantity          Int
  totalPrice        Int
  email             String
  addressLine1      String?
  addressLine2      String?
  addressCity       String?
  addressState      String?
  addressPostalCode String?
  addressCountry    String?
  createdAt         DateTime @default(now())

  user User @relation(fields: [email], references: [email], onDelete: Cascade)
}
